name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - renovate/*

jobs:
  lint:
    if: github.event_name == 'pull_request' || github.event_name == 'push' && github.ref != 'refs/heads/renovate/*' || github.event_name == 'push' && github.ref == 'refs/heads/renovate/*' && github.event.pull_request == null
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚧 Set up project
        run: pnpm dev:prepare

      - name: 🔠 Lint project
        run: pnpm run lint

  test:
    if: github.event_name == 'pull_request' || github.event_name == 'push' && github.ref != 'refs/heads/renovate/*' || github.event_name == 'push' && github.ref == 'refs/heads/renovate/*' && github.event.pull_request == null
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚧 Set up project
        run: pnpm dev:prepare

      - name: 🎭 Set up playwright
        run: pnpm playwright-core install

      - name: 🧪 Test project
        run: pnpm test

      - name: 💪 Test types
        run: pnpm test:types

      - name: 🛠 Build project
        run: pnpm build

      - name: 🟩 Coverage
        if: matrix.os != 'windows-latest'
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
